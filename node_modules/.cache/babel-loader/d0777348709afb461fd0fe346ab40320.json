{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/ListVideos.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: orange[400],\n    '&$checked': {\n      color: orange[600]\n    },\n    '&:hover': {\n      backgroundColor: 'transparent'\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 17\n}, this));\nconst useStyles = makeStyles({\n  root: {\n    // paddingLeft: 0,\n    // paddingTop: 0,\n    // paddingBottom: 0\n    height: '100%'\n  },\n  active: {\n    backgroundColor: 'rgba(255, 255, 255, 0.08)'\n  },\n  title: {// color: \"#ffff\"\n  },\n  list: {\n    height: \"500px\",\n    overflow: \"auto\"\n  },\n  button: {\n    width: '100%'\n  }\n});\n\nconst ListVideos = ({\n  classes,\n  checkedVideo,\n  mainVideo,\n  activeVideo,\n  activeVideoId\n}) => {\n  _s();\n\n  const classList = useStyles();\n\n  const handleOnClick = e => {\n    e.preventDefault();\n    console.log(e.currentTarget.value);\n    activeVideo(e.currentTarget.value);\n  };\n\n  const selectedCheckboxes = new Set();\n\n  const handleCheckBox = e => {\n    var value = e.target.value;\n\n    if (selectedCheckboxes.has(value)) {\n      selectedCheckboxes.delete(value);\n    } else {\n      selectedCheckboxes.add(value);\n    }\n\n    const storeChecked = Array.from(selectedCheckboxes);\n    checkedVideo(storeChecked);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classList.root,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classList.list,\n      component: \"nav\",\n      \"aria-label\": \"contacts\",\n      children: mainVideo.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(GreenCheckbox, {\n          value: idx,\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          },\n          onChange: handleCheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBase, {\n          value: item.videoId,\n          onClick: handleOnClick,\n          className: `${classList.button} ${item.videoId === activeVideoId ? classList.active : null}`,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                variant: \"square\",\n                alt: \"Remy Sharp\",\n                src: item.thumbnails[0].url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 17\n  }, this);\n};\n\n_s(ListVideos, \"EwpLLg7yMnnE8yXVUsmahmW8V7w=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListVideos;\nexport default ListVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListVideos\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/ListVideos.js"],"names":["React","Grid","Paper","List","ListItem","ListItemText","ListItemAvatar","makeStyles","Avatar","Divider","ButtonBase","Box","Checkbox","withStyles","orange","useState","useEffect","GreenCheckbox","root","color","backgroundColor","checked","props","useStyles","height","active","title","list","overflow","button","width","ListVideos","classes","checkedVideo","mainVideo","activeVideo","activeVideoId","classList","handleOnClick","e","preventDefault","console","log","currentTarget","value","selectedCheckboxes","Set","handleCheckBox","target","has","delete","add","storeChecked","Array","from","map","item","idx","videoId","thumbnails","url"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Box from '@material-ui/core/Box';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { withStyles } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport { useState, useEffect } from 'react';\n\nconst GreenCheckbox = withStyles({\n    root: {\n      color: orange[400],\n      '&$checked': {\n        color: orange[600],\n      },'&:hover': {\n        backgroundColor: 'transparent',\n      }\n    },\n    checked: {},\n  })((props) => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n    root: {\n        // paddingLeft: 0,\n        // paddingTop: 0,\n        // paddingBottom: 0\n        height: '100%'\n    },\n    active: {\n        backgroundColor: 'rgba(255, 255, 255, 0.08)'\n    },\n    title: {\n        // color: \"#ffff\"\n    },\n    list: {\n        height: \"500px\",\n        overflow: \"auto\",\n    },\n    button: {\n        width: '100%'\n    }\n})\n\n\nconst ListVideos = ({classes,checkedVideo, mainVideo, activeVideo, activeVideoId}) => {\n    \n    const classList = useStyles();\n\n    const handleOnClick = (e) => {\n        e.preventDefault();\n        console.log(e.currentTarget.value);\n        activeVideo(e.currentTarget.value)\n    }\n\n\n\n    const selectedCheckboxes = new Set();\n    const handleCheckBox = (e) => {\n        var value = e.target.value\n        if(selectedCheckboxes.has(value)){\n            selectedCheckboxes.delete(value);\n        } else {\n            selectedCheckboxes.add(value);\n        }\n        const storeChecked = Array.from(selectedCheckboxes);\n        checkedVideo(storeChecked);\n    }\n\n\n\n    return (\n                <Paper className={classList.root}>\n                    <List className={classList.list} component=\"nav\"  aria-label=\"contacts\">\n                        {\n                            mainVideo.map((item, idx) => \n                            <Box display=\"flex\" key={idx} >\n                                <GreenCheckbox\n                                    value={idx}\n                                    inputProps={{ 'aria-label': 'primary checkbox' }}\n                                    onChange={handleCheckBox}\n                                />\n                                <ButtonBase\n                                    value={item.videoId}\n                                    onClick={handleOnClick}\n                                    className={`${classList.button} ${(item.videoId === activeVideoId) ? classList.active : null}`}\n                                >\n                                    <ListItem button> \n                                        \n                                        <ListItemAvatar>\n                                            <Avatar variant=\"square\" alt=\"Remy Sharp\" src={item.thumbnails[0].url}  />\n                                        </ListItemAvatar>\n                                        <ListItemText  primary={item.title} />\n\n                                    </ListItem>\n                                </ButtonBase>\n                                <Divider />\n                            </Box>\n                            )\n                        }\n                    </List>\n                </Paper>\n                \n    )\n}\n\nexport default ListVideos\n"]},"metadata":{},"sourceType":"module"}