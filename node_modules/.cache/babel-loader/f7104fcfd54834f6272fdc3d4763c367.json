{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/MusicBox/SearchInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { orange } from \"@material-ui/core/colors\";\nimport jsonp from \"jsonp\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../../Theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  root: {\n    \"& .Mui-focused\": {\n      color: orange\n    },\n    \"& .MuiOutlinedInput-root\": {\n      \"&:hover fieldset\": {\n        borderColor: orange\n      }\n    }\n  },\n  clearIndicator: {\n    color: \"#ffa726\"\n  },\n  inputRoot: {\n    \"& .MuiOutlinedInput-root\": {\n      \"& fieldset\": {\n        borderColor: \"#000\"\n      }\n    }\n  }\n});\n\nconst SearchInput = ({\n  onVideoSearch,\n  searchResults\n}) => {\n  _s();\n\n  const useClass = useStyle();\n  const [value, setValue] = useState(\"\");\n  const [optionsSearch, setOptionsSearch] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (searchResults.length === 0) {\n      setValue(\"\");\n    }\n\n    if (searchResults.length > 0) {\n      setLoading(false);\n    }\n  }, [searchResults]);\n\n  const fetchSearchResults = term => {\n    jsonp(`https://clients1.google.com/complete/search?client=youtube&hl=en&ds=yt&q=${term}`, null, function (err, data) {\n      if (err) {\n        console.error(err.message);\n      } else {\n        setOptionsSearch(data[1].map(item => item[0]));\n      }\n    });\n  };\n\n  const handleOnKeyUp = e => {\n    fetchSearchResults(e.target.value);\n  };\n\n  const handleOnChange = (event, val) => {\n    setValue(val);\n    onVideoSearch(val);\n\n    if (val !== null) {\n      setLoading(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      className: `${useClass.clearIndicator} ${useClass.root}`,\n      classes: useClass,\n      value: value,\n      onKeyUp: handleOnKeyUp,\n      onChange: handleOnChange,\n      id: \"controllable-states-demo\",\n      freeSolo: true,\n      options: optionsSearch,\n      getOptionSelected: (option, value) => option.description === value.description,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        className: `${useClass.root} ${useClass.inputRoot}`,\n        label: \"Search Youtube Video\",\n        id: \"input-with-icon-adornment\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 2,\n      children: loading === false ? null : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n};\n\n_s(SearchInput, \"4amBZ8bFuYflvX0MWtyke06InzA=\", false, function () {\n  return [useStyle];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/MusicBox/SearchInput.js"],"names":["useState","useEffect","TextField","Autocomplete","makeStyles","ThemeProvider","orange","jsonp","CircularProgress","Box","CssBaseline","theme","useStyle","root","color","borderColor","clearIndicator","inputRoot","SearchInput","onVideoSearch","searchResults","useClass","value","setValue","optionsSearch","setOptionsSearch","loading","setLoading","length","fetchSearchResults","term","err","data","console","error","message","map","item","handleOnKeyUp","e","target","handleOnChange","event","val","option","description","params"],"mappings":"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","sourcesContent":["import { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { orange } from \"@material-ui/core/colors\";\nimport jsonp from \"jsonp\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Box from \"@material-ui/core/Box\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport theme from \"../../Theme\";\n\nconst useStyle = makeStyles({\n   root: {\n      \"& .Mui-focused\": {\n         color: orange,\n      },\n      \"& .MuiOutlinedInput-root\": {\n         \"&:hover fieldset\": {\n            borderColor: orange,\n         },\n      },\n   },\n   clearIndicator: {\n      color: \"#ffa726\",\n   },\n   inputRoot: {\n      \"& .MuiOutlinedInput-root\": {\n         \"& fieldset\": {\n            borderColor: \"#000\",\n         },\n      },\n   },\n});\n\nconst SearchInput = ({ onVideoSearch, searchResults }) => {\n   const useClass = useStyle();\n   const [value, setValue] = useState(\"\");\n\n   const [optionsSearch, setOptionsSearch] = useState([]);\n   const [loading, setLoading] = useState(false);\n\n   useEffect(() => {\n      if (searchResults.length === 0) {\n         setValue(\"\");\n      }\n      if (searchResults.length > 0) {\n         setLoading(false);\n      }\n   }, [searchResults]);\n\n   const fetchSearchResults = (term) => {\n      jsonp(\n         `https://clients1.google.com/complete/search?client=youtube&hl=en&ds=yt&q=${term}`,\n         null,\n         function (err, data) {\n            if (err) {\n               console.error(err.message);\n            } else {\n               setOptionsSearch(data[1].map((item) => item[0]));\n            }\n         }\n      );\n   };\n\n   const handleOnKeyUp = (e) => {\n      fetchSearchResults(e.target.value);\n   };\n\n   const handleOnChange = (event, val) => {\n      setValue(val);\n      onVideoSearch(val);\n      if (val !== null) {\n         setLoading(true);\n      }\n   };\n\n   return (\n      <ThemeProvider theme={theme}>\n         <CssBaseline />\n         <Autocomplete\n            className={`${useClass.clearIndicator} ${useClass.root}`}\n            classes={useClass}\n            value={value}\n            onKeyUp={handleOnKeyUp}\n            onChange={handleOnChange}\n            id=\"controllable-states-demo\"\n            freeSolo\n            options={optionsSearch}\n            getOptionSelected={(option, value) =>\n               option.description === value.description\n            }\n            renderInput={(params) => (\n               <TextField\n                  {...params}\n                  className={`${useClass.root} ${useClass.inputRoot}`}\n                  label=\"Search Youtube Video\"\n                  id=\"input-with-icon-adornment\"\n                  variant=\"outlined\"\n               />\n            )}\n         />\n         <Box display=\"flex\" justifyContent=\"center\" p={2}>\n            {loading === false ? null : <CircularProgress />}\n         </Box>\n      </ThemeProvider>\n   );\n};\n\nexport default SearchInput;\n"]},"metadata":{},"sourceType":"module"}