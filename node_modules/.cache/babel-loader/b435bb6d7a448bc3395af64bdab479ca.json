{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/MusicBox/ListVideos.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Box from \"@material-ui/core/Box\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { orange } from \"@material-ui/core/colors\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: orange[400],\n    \"&$checked\": {\n      color: orange[600]\n    },\n    \"&:hover\": {\n      backgroundColor: \"transparent\"\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 15\n}, this));\nconst useStyles = makeStyles({\n  root: {\n    // paddingLeft: 0,\n    // paddingTop: 0,\n    // paddingBottom: 0\n    height: \"calc(80% - 250px + 85px + 8px)\"\n  },\n  active: {\n    backgroundColor: \"rgba(255, 255, 255, 0.08)\"\n  },\n  title: {// color: \"#ffff\"\n  },\n  list: {\n    height: \"500px\",\n    overflow: \"auto\"\n  },\n  button: {\n    width: \"100%\"\n  }\n});\n\nconst ListVideos = ({\n  classes,\n  checkedVideo,\n  activeVideo,\n  activeVideoId\n}) => {\n  _s();\n\n  const classList = useStyles();\n  const {\n    videos\n  } = useContext(AppContext);\n\n  const handleOnClick = e => {\n    e.preventDefault();\n    activeVideo(e.currentTarget.value);\n  };\n\n  const selectedCheckboxes = new Set();\n\n  const handleCheckBox = e => {\n    var value = e.target.value;\n\n    if (selectedCheckboxes.has(value)) {\n      selectedCheckboxes.delete(value);\n    } else {\n      selectedCheckboxes.add(value);\n    }\n\n    const storeChecked = Array.from(selectedCheckboxes);\n    checkedVideo(selectedCheckboxes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classList.root,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classList.list,\n      component: \"nav\",\n      \"aria-label\": \"contacts\",\n      children: videos.map((item, idx) => /*#__PURE__*/_jsxDEV(Box, {\n        paddingRight: \"10px\",\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(GreenCheckbox, {\n          value: item.videoId,\n          inputProps: {\n            \"aria-label\": \"primary checkbox\"\n          },\n          onChange: handleCheckBox\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(ButtonBase, {\n          value: item.videoId,\n          onClick: handleOnClick,\n          className: `${classList.button} ${item.videoId === activeVideoId ? classList.active : null}`,\n          children: /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                variant: \"square\",\n                alt: \"Remy Sharp\",\n                src: item.thumbnails[0].url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 28\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ListVideos, \"yKLpQ+MWq7o/jQkqbgLL5F1Pt+o=\", false, function () {\n  return [useStyles];\n});\n\n_c = ListVideos;\nexport default ListVideos;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListVideos\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/MusicBox/ListVideos.js"],"names":["React","Paper","List","ListItem","ListItemText","ListItemAvatar","makeStyles","Avatar","Divider","ButtonBase","Box","Checkbox","withStyles","orange","useContext","AppContext","GreenCheckbox","root","color","backgroundColor","checked","props","useStyles","height","active","title","list","overflow","button","width","ListVideos","classes","checkedVideo","activeVideo","activeVideoId","classList","videos","handleOnClick","e","preventDefault","currentTarget","value","selectedCheckboxes","Set","handleCheckBox","target","has","delete","add","storeChecked","Array","from","map","item","idx","videoId","thumbnails","url"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Box from \"@material-ui/core/Box\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { orange } from \"@material-ui/core/colors\";\nimport { useContext } from \"react\";\nimport { AppContext } from \"../../Context/AppProvider\";\n\nconst GreenCheckbox = withStyles({\n   root: {\n      color: orange[400],\n      \"&$checked\": {\n         color: orange[600],\n      },\n      \"&:hover\": {\n         backgroundColor: \"transparent\",\n      },\n   },\n   checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst useStyles = makeStyles({\n   root: {\n      // paddingLeft: 0,\n      // paddingTop: 0,\n      // paddingBottom: 0\n      height: \"calc(80% - 250px + 85px + 8px)\",\n   },\n   active: {\n      backgroundColor: \"rgba(255, 255, 255, 0.08)\",\n   },\n   title: {\n      // color: \"#ffff\"\n   },\n   list: {\n      height: \"500px\",\n      overflow: \"auto\",\n   },\n   button: {\n      width: \"100%\",\n   },\n});\n\nconst ListVideos = ({ classes, checkedVideo, activeVideo, activeVideoId }) => {\n   const classList = useStyles();\n   const { videos } = useContext(AppContext);\n\n   const handleOnClick = (e) => {\n      e.preventDefault();\n      activeVideo(e.currentTarget.value);\n   };\n\n   const selectedCheckboxes = new Set();\n   const handleCheckBox = (e) => {\n      var value = e.target.value;\n      if (selectedCheckboxes.has(value)) {\n         selectedCheckboxes.delete(value);\n      } else {\n         selectedCheckboxes.add(value);\n      }\n      const storeChecked = Array.from(selectedCheckboxes);\n      checkedVideo(selectedCheckboxes);\n   };\n\n   return (\n      <Paper className={classList.root}>\n         <List className={classList.list} component=\"nav\" aria-label=\"contacts\">\n            {videos.map((item, idx) => (\n               <Box paddingRight=\"10px\" display=\"flex\" key={idx}>\n                  <GreenCheckbox\n                     value={item.videoId}\n                     inputProps={{ \"aria-label\": \"primary checkbox\" }}\n                     onChange={handleCheckBox}\n                  />\n                  <ButtonBase\n                     value={item.videoId}\n                     onClick={handleOnClick}\n                     className={`${classList.button} ${\n                        item.videoId === activeVideoId ? classList.active : null\n                     }`}\n                  >\n                     <ListItem button>\n                        <ListItemAvatar>\n                           <Avatar\n                              variant=\"square\"\n                              alt=\"Remy Sharp\"\n                              src={item.thumbnails[0].url}\n                           />\n                        </ListItemAvatar>\n                        <ListItemText primary={item.title} />\n                     </ListItem>\n                  </ButtonBase>\n                  <Divider />\n               </Box>\n            ))}\n         </List>\n      </Paper>\n   );\n};\n\nexport default ListVideos;\n"]},"metadata":{},"sourceType":"module"}