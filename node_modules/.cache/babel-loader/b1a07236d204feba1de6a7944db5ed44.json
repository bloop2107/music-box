{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/MusicBox/VideoPlay.js\",\n    _s = $RefreshSig$();\n\nimport ReactPlayer from \"react-player\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Playbar from \"./Playbar\";\nimport loading from \"../../asset/images/loading.svg\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppContext } from \"../../Context/AppProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoPlay = ({\n  activeVideoId,\n  nextActive\n}) => {\n  _s();\n\n  const urlUtube = \"https://www.youtube.com/watch?v=\";\n  const {\n    videos\n  } = useContext(AppContext);\n  const [activeVideo, setActiveVideo] = useState({\n    url: null,\n    pip: false,\n    playing: false,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false\n  });\n  useEffect(() => {\n    setActiveVideo({ ...activeVideo,\n      url: `https://www.youtube.com/watch?v=${activeVideoId}`\n    });\n  }, [activeVideoId]);\n  const currVidIndex = videos.findIndex(video => urlUtube + video.videoId === activeVideo.url);\n\n  const onEnded = () => {\n    if (currVidIndex < videos.length) {\n      setActiveVideo({ ...activeVideo,\n        url: videos[currVidIndex + 1] ? urlUtube + videos[currVidIndex + 1].videoId : urlUtube + videos[0].videoId\n      });\n    }\n\n    nextActive(videos[currVidIndex + 1] ? videos[currVidIndex + 1].videoId : videos[0].videoId);\n  };\n\n  const onPaused = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: false\n    });\n  };\n\n  const onPlayed = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: true\n    });\n  };\n\n  const onPause = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: false\n    });\n  };\n\n  const onPlay = () => {\n    if (videos.length > 0) {\n      if (activeVideoId) {\n        setActiveVideo({ ...activeVideo,\n          playing: true\n        });\n      } else {\n        setActiveVideo({ ...activeVideo,\n          url: urlUtube + videos[0].videoId,\n          playing: true\n        });\n        nextActive(videos[0].videoId);\n      }\n    }\n  };\n\n  const onNext = () => {\n    setActiveVideo({ ...activeVideo,\n      url: videos[currVidIndex + 1] ? urlUtube + videos[currVidIndex + 1].videoId : null\n    });\n    nextActive(videos[currVidIndex + 1] ? videos[currVidIndex + 1].videoId : videos[0].videoId);\n  };\n\n  const onPrev = () => {\n    if (currVidIndex > 0) {\n      setActiveVideo({ ...activeVideo,\n        url: videos[currVidIndex - 1] ? urlUtube + videos[currVidIndex - 1].videoId : null\n      });\n    }\n\n    nextActive(videos[currVidIndex - 1] ? videos[currVidIndex - 1].videoId : videos[0].videoId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [activeVideoId ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      width: \"100%\",\n      height: \"250px\",\n      url: activeVideo.url,\n      pip: activeVideo.pip,\n      playing: activeVideo.playing,\n      controls: activeVideo.controls,\n      light: activeVideo.light,\n      volume: activeVideo.volume,\n      muted: activeVideo.muted,\n      played: activeVideo.played,\n      loaded: activeVideo.loaded,\n      duration: activeVideo.duration,\n      playbackRate: activeVideo.playbackRate,\n      loop: activeVideo.loop,\n      onEnded: onEnded,\n      onPause: onPaused,\n      onPlay: onPlayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      padding: \"20px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"250px\",\n      border: \"1px solid #f9982d\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loading,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Playbar, {\n      activeVideo: activeVideo,\n      onPrev: onPrev,\n      onNext: onNext,\n      onPause: onPause,\n      onPlay: onPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoPlay, \"ceY9GNUMhFi3IY4mJcaN8qWU4t4=\");\n\n_c = VideoPlay;\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlay\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/MusicBox/VideoPlay.js"],"names":["ReactPlayer","useState","useEffect","useContext","Playbar","Box","AppContext","VideoPlay","activeVideoId","nextActive","urlUtube","videos","activeVideo","setActiveVideo","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","currVidIndex","findIndex","video","videoId","onEnded","length","onPaused","onPlayed","onPause","onPlay","onNext","onPrev","loading"],"mappings":"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","sourcesContent":["import ReactPlayer from \"react-player\";\nimport { useState, useEffect, useContext } from \"react\";\nimport Playbar from \"./Playbar\";\nimport loading from \"../../asset/images/loading.svg\";\nimport Box from \"@material-ui/core/Box\";\nimport { AppContext } from \"../../Context/AppProvider\";\nconst VideoPlay = ({ activeVideoId, nextActive }) => {\n   const urlUtube = \"https://www.youtube.com/watch?v=\";\n   const { videos } = useContext(AppContext);\n   const [activeVideo, setActiveVideo] = useState({\n      url: null,\n      pip: false,\n      playing: false,\n      controls: false,\n      light: false,\n      volume: 0.8,\n      muted: false,\n      played: 0,\n      loaded: 0,\n      duration: 0,\n      playbackRate: 1.0,\n      loop: false,\n   });\n\n   useEffect(() => {\n      setActiveVideo({\n         ...activeVideo,\n         url: `https://www.youtube.com/watch?v=${activeVideoId}`,\n      });\n   }, [activeVideoId]);\n\n   const currVidIndex = videos.findIndex(\n      (video) => urlUtube + video.videoId === activeVideo.url\n   );\n\n   const onEnded = () => {\n      if (currVidIndex < videos.length) {\n         setActiveVideo({\n            ...activeVideo,\n            url: videos[currVidIndex + 1]\n               ? urlUtube + videos[currVidIndex + 1].videoId\n               : urlUtube + videos[0].videoId,\n         });\n      }\n      nextActive(\n         videos[currVidIndex + 1]\n            ? videos[currVidIndex + 1].videoId\n            : videos[0].videoId\n      );\n   };\n\n   const onPaused = () => {\n      setActiveVideo({ ...activeVideo, playing: false });\n   };\n\n   const onPlayed = () => {\n      setActiveVideo({ ...activeVideo, playing: true });\n   };\n\n   const onPause = () => {\n      setActiveVideo({ ...activeVideo, playing: false });\n   };\n\n   const onPlay = () => {\n      if (videos.length > 0) {\n         if (activeVideoId) {\n            setActiveVideo({ ...activeVideo, playing: true });\n         } else {\n            setActiveVideo({\n               ...activeVideo,\n               url: urlUtube + videos[0].videoId,\n               playing: true,\n            });\n            nextActive(videos[0].videoId);\n         }\n      }\n   };\n\n   const onNext = () => {\n      setActiveVideo({\n         ...activeVideo,\n         url: videos[currVidIndex + 1]\n            ? urlUtube + videos[currVidIndex + 1].videoId\n            : null,\n      });\n      nextActive(\n         videos[currVidIndex + 1]\n            ? videos[currVidIndex + 1].videoId\n            : videos[0].videoId\n      );\n   };\n\n   const onPrev = () => {\n      if (currVidIndex > 0) {\n         setActiveVideo({\n            ...activeVideo,\n            url: videos[currVidIndex - 1]\n               ? urlUtube + videos[currVidIndex - 1].videoId\n               : null,\n         });\n      }\n      nextActive(\n         videos[currVidIndex - 1]\n            ? videos[currVidIndex - 1].videoId\n            : videos[0].videoId\n      );\n   };\n\n   return (\n      <>\n         {activeVideoId ? (\n            <ReactPlayer\n               width=\"100%\"\n               height=\"250px\"\n               url={activeVideo.url}\n               pip={activeVideo.pip}\n               playing={activeVideo.playing}\n               controls={activeVideo.controls}\n               light={activeVideo.light}\n               volume={activeVideo.volume}\n               muted={activeVideo.muted}\n               played={activeVideo.played}\n               loaded={activeVideo.loaded}\n               duration={activeVideo.duration}\n               playbackRate={activeVideo.playbackRate}\n               loop={activeVideo.loop}\n               onEnded={onEnded}\n               onPause={onPaused}\n               onPlay={onPlayed}\n            />\n         ) : (\n            <Box\n               padding=\"20px\"\n               display=\"flex\"\n               justifyContent=\"center\"\n               height=\"250px\"\n               border=\"1px solid #f9982d\"\n            >\n               <img src={loading} alt=\"loading\" />\n            </Box>\n         )}\n         <Playbar\n            activeVideo={activeVideo}\n            onPrev={onPrev}\n            onNext={onNext}\n            onPause={onPause}\n            onPlay={onPlay}\n         />\n      </>\n   );\n};\n\nexport default VideoPlay;\n"]},"metadata":{},"sourceType":"module"}