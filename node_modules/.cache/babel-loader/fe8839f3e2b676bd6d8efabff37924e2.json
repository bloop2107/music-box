{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/SearchInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport jsonp from 'jsonp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../Theme';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyle = makeStyles({\n  root: {\n    '& .Mui-focused': {\n      color: orange\n    },\n    '& .MuiOutlinedInput-root': {\n      '&:hover fieldset': {\n        borderColor: orange\n      }\n    }\n  },\n  clearIndicator: {\n    color: \"#ffa726\"\n  },\n  inputRoot: {}\n});\n\nconst SearchInput = ({\n  onVideoSearch,\n  searchResults\n}) => {\n  _s();\n\n  const useClass = useStyle();\n  const [value, setValue] = useState('');\n  const [optionsSearch, setOptionsSearch] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    if (searchResults.length === 0) {\n      setValue('');\n    }\n\n    if (searchResults.length > 0) {\n      setLoading(false);\n    }\n  }, [searchResults]);\n\n  const fetchSearchResults = term => {\n    jsonp(`https://clients1.google.com/complete/search?client=youtube&hl=en&ds=yt&q=${term}`, null, function (err, data) {\n      if (err) {\n        console.error(err.message);\n      } else {\n        setOptionsSearch(data[1].map(item => item[0]));\n      }\n    });\n  };\n\n  const handleOnKeyUp = e => {\n    fetchSearchResults(e.target.value);\n  };\n\n  const handleOnChange = (event, val) => {\n    setValue(val);\n    onVideoSearch(val);\n\n    if (val !== null) {\n      setLoading(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n      className: `${useClass.clearIndicator} ${useClass.root} ${useClass.inputRoot}`,\n      classes: useClass,\n      value: value,\n      onKeyUp: handleOnKeyUp,\n      onChange: handleOnChange,\n      id: \"controllable-states-demo\",\n      freeSolo: true,\n      options: optionsSearch,\n      getOptionSelected: (option, value) => option.description === value.description,\n      renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n        className: useClass.root,\n        label: \"Search Youtube Video\",\n        id: \"input-with-icon-adornment\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 42\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      p: 2,\n      children: loading === false ? null : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 46\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SearchInput, \"Wl3q5BmAD+moJmiTod5g1LUk/KE=\", false, function () {\n  return [useStyle];\n});\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/SearchInput.js"],"names":["useState","useEffect","TextField","Autocomplete","makeStyles","ThemeProvider","orange","jsonp","CircularProgress","Box","CssBaseline","theme","useStyle","root","color","borderColor","clearIndicator","inputRoot","SearchInput","onVideoSearch","searchResults","useClass","value","setValue","optionsSearch","setOptionsSearch","loading","setLoading","length","fetchSearchResults","term","err","data","console","error","message","map","item","handleOnKeyUp","e","target","handleOnChange","event","val","option","description","params"],"mappings":"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","sourcesContent":["import {useState,useEffect} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { orange } from '@material-ui/core/colors';\nimport jsonp from 'jsonp';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from '../Theme'\n\n\nconst useStyle = makeStyles({\n    root: {\n        '& .Mui-focused': {\n            color: orange,\n        },\n        '& .MuiOutlinedInput-root': {\n          '&:hover fieldset': {\n              borderColor: orange\n          }\n        }\n    },\n    clearIndicator: {\n        color: \"#ffa726\"\n    },\n    inputRoot: {\n      \n    }\n})\n\n\nconst SearchInput = ({onVideoSearch,searchResults}) => {\n    const useClass = useStyle();\n    const [value, setValue] = useState('');\n\n    const [optionsSearch,setOptionsSearch] = useState([]);\n    const [loading,setLoading] = useState(false);\n\n    useEffect(() => {\n      if(searchResults.length === 0){\n          setValue('');\n      }\n      if(searchResults.length > 0){\n          setLoading(false);\n      }\n    }, [searchResults])\n\n    const fetchSearchResults = (term) => {\n        jsonp(\n          `https://clients1.google.com/complete/search?client=youtube&hl=en&ds=yt&q=${term}`,\n          null,\n          function (err, data) {\n            if (err) {\n              console.error(err.message);\n            } else {\n                setOptionsSearch(data[1].map(item => item[0]));\n            }\n          }\n        );\n    };\n\n    const handleOnKeyUp = (e) => {\n        fetchSearchResults(e.target.value);\n    }\n\n    const handleOnChange = (event, val) => {\n        setValue(val);\n        onVideoSearch(val);\n        if(val !== null){\n          setLoading(true);\n        }\n    }\n\n    return (\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n            <Autocomplete \n                className = {`${useClass.clearIndicator} ${useClass.root} ${useClass.inputRoot}`}\n                classes = {useClass}\n                value={value}\n                onKeyUp = {handleOnKeyUp}\n                onChange={handleOnChange}\n                id=\"controllable-states-demo\"\n                freeSolo\n                options={optionsSearch}\n                getOptionSelected={(option, value) => option.description === value.description}\n                renderInput={(params) => <TextField {...params} className={useClass.root} label=\"Search Youtube Video\" id=\"input-with-icon-adornment\" variant=\"outlined\"\n                />}\n            />\n            <Box display=\"flex\" justifyContent=\"center\" p={2}>\n              {\n                (loading === false) ? null : <CircularProgress />\n              }\n            </Box>\n        </ThemeProvider>\n    )\n}\n\nexport default SearchInput\n"]},"metadata":{},"sourceType":"module"}