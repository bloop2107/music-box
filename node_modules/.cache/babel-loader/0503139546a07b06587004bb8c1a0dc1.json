{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/Context/AuthProvider.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, createContext } from \"react\"; // import firebase, { auth } from \"../firebase/config\";\n\nimport firebase, { auth } from \"../firebase/config\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\n\nconst AuthProvider = ({\n  children\n}) => {\n  _s();\n\n  const [user, setUser] = useState({});\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const unsubscribed = auth.onAuthStateChanged(user => {\n      if (user) {\n        const {\n          displayName,\n          email,\n          uid,\n          photoURL\n        } = user;\n        setUser({\n          displayName,\n          email,\n          uid,\n          photoURL\n        });\n        setIsLoading(false);\n        history.push(\"/\");\n      }\n    });\n    setUser({});\n    setIsLoading(false);\n    history.push(\"/login\");\n    alert(isLoading);\n    return () => {\n      unsubscribed();\n    };\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user\n    },\n    children: isLoading ? \"Loading\" : children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AuthProvider, \"o9TOeKgZZnjpaHY94AVr78qCgsc=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthProvider;\nexport default AuthProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/Context/AuthProvider.js"],"names":["useState","useEffect","createContext","firebase","auth","useHistory","AuthContext","AuthProvider","children","user","setUser","history","isLoading","setIsLoading","unsubscribed","onAuthStateChanged","displayName","email","uid","photoURL","push","alert"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,aAA9B,QAAmD,OAAnD,C,CACA;;AACA,OAAOC,QAAP,IAAmBC,IAAnB,QAA+B,oBAA/B;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,EAAjC;;AAEP,MAAMK,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEA,QAAMW,OAAO,GAAGN,UAAU,EAA1B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMa,YAAY,GAAGV,IAAI,CAACW,kBAAL,CAAyBN,IAAD,IAAU;AACpD,UAAIA,IAAJ,EAAU;AACP,cAAM;AAAEO,UAAAA,WAAF;AAAeC,UAAAA,KAAf;AAAsBC,UAAAA,GAAtB;AAA2BC,UAAAA;AAA3B,YAAwCV,IAA9C;AACAC,QAAAA,OAAO,CAAC;AACLM,UAAAA,WADK;AAELC,UAAAA,KAFK;AAGLC,UAAAA,GAHK;AAILC,UAAAA;AAJK,SAAD,CAAP;AAMAN,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,QAAAA,OAAO,CAACS,IAAR,CAAa,GAAb;AACF;AACH,KAZoB,CAArB;AAcAV,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAG,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACAF,IAAAA,OAAO,CAACS,IAAR,CAAa,QAAb;AACAC,IAAAA,KAAK,CAACT,SAAD,CAAL;AAEA,WAAO,MAAM;AACVE,MAAAA,YAAY;AACd,KAFD;AAGF,GAvBQ,EAuBN,CAACH,OAAD,CAvBM,CAAT;AAyBA,sBACG,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEF,MAAAA;AAAF,KAA7B;AAAA,cACIG,SAAS,GAAG,SAAH,GAAeJ;AAD5B;AAAA;AAAA;AAAA;AAAA,UADH;AAKF,CApCD;;GAAMD,Y;UAGaF,U;;;KAHbE,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import { useState, useEffect, createContext } from \"react\";\n// import firebase, { auth } from \"../firebase/config\";\nimport firebase, { auth } from \"../firebase/config\";\n\nimport { useHistory } from \"react-router\";\n\nexport const AuthContext = createContext();\n\nconst AuthProvider = ({ children }) => {\n   const [user, setUser] = useState({});\n\n   const history = useHistory();\n   const [isLoading, setIsLoading] = useState(true);\n\n   useEffect(() => {\n      const unsubscribed = auth.onAuthStateChanged((user) => {\n         if (user) {\n            const { displayName, email, uid, photoURL } = user;\n            setUser({\n               displayName,\n               email,\n               uid,\n               photoURL,\n            });\n            setIsLoading(false);\n            history.push(\"/\");\n         }\n      });\n\n      setUser({});\n      setIsLoading(false);\n      history.push(\"/login\");\n      alert(isLoading);\n\n      return () => {\n         unsubscribed();\n      };\n   }, [history]);\n\n   return (\n      <AuthContext.Provider value={{ user }}>\n         {isLoading ? \"Loading\" : children}\n      </AuthContext.Provider>\n   );\n};\n\nexport default AuthProvider;\n"]},"metadata":{},"sourceType":"module"}