{"ast":null,"code":"var _jsxFileName = \"/home/jackymad/reacjs/efe-music/src/components/VideoPlay.js\",\n    _s = $RefreshSig$();\n\nimport ReactPlayer from \"react-player\";\nimport { useState, useEffect } from 'react';\nimport Playbar from './Playbar';\nimport loading from \"../asset/images/loading.svg\";\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst VideoPlay = ({\n  activeVideoId,\n  mainVideo,\n  nextActive\n}) => {\n  _s();\n\n  const urlUtube = 'https://www.youtube.com/watch?v=';\n  const [activeVideo, setActiveVideo] = useState({\n    url: null,\n    pip: false,\n    playing: false,\n    controls: false,\n    light: false,\n    volume: 0.8,\n    muted: false,\n    played: 0,\n    loaded: 0,\n    duration: 0,\n    playbackRate: 1.0,\n    loop: false\n  });\n  useEffect(() => {\n    setActiveVideo({ ...activeVideo,\n      url: `https://www.youtube.com/watch?v=${activeVideoId}`\n    });\n  }, [activeVideoId]);\n  const currVidIndex = mainVideo.findIndex(video => urlUtube + video.videoId === activeVideo.url);\n\n  const onEnded = () => {\n    if (currVidIndex < mainVideo.length) {\n      setActiveVideo({ ...activeVideo,\n        url: mainVideo[currVidIndex + 1] ? urlUtube + mainVideo[currVidIndex + 1].videoId : urlUtube + mainVideo[0].videoId\n      });\n    }\n\n    nextActive(mainVideo[currVidIndex + 1] ? mainVideo[currVidIndex + 1].videoId : mainVideo[0].videoId);\n  };\n\n  const onPaused = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: false\n    });\n  };\n\n  const onPlayed = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: true\n    });\n  };\n\n  const onPause = () => {\n    setActiveVideo({ ...activeVideo,\n      playing: false\n    });\n  };\n\n  const onPlay = () => {\n    if (mainVideo.length > 0) {\n      if (activeVideoId) {\n        setActiveVideo({ ...activeVideo,\n          playing: true\n        });\n      } else {\n        setActiveVideo({ ...activeVideo,\n          url: urlUtube + mainVideo[0].videoId,\n          playing: true\n        });\n        nextActive(mainVideo[0].videoId);\n      }\n    }\n  };\n\n  const onNext = () => {\n    setActiveVideo({ ...activeVideo,\n      url: mainVideo[currVidIndex + 1] ? urlUtube + mainVideo[currVidIndex + 1].videoId : null\n    });\n    nextActive(mainVideo[currVidIndex + 1] ? mainVideo[currVidIndex + 1].videoId : mainVideo[0].videoId);\n  };\n\n  const onPrev = () => {\n    if (currVidIndex > 0) {\n      setActiveVideo({ ...activeVideo,\n        url: mainVideo[currVidIndex - 1] ? urlUtube + mainVideo[currVidIndex - 1].videoId : null\n      });\n    }\n\n    nextActive(mainVideo[currVidIndex - 1] ? mainVideo[currVidIndex - 1].videoId : mainVideo[0].videoId);\n  };\n\n  console.log(activeVideoId);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [activeVideoId ? /*#__PURE__*/_jsxDEV(ReactPlayer, {\n      width: \"100%\",\n      height: \"250px\",\n      url: activeVideo.url,\n      pip: activeVideo.pip,\n      playing: activeVideo.playing,\n      controls: activeVideo.controls,\n      light: activeVideo.light,\n      volume: activeVideo.volume,\n      muted: activeVideo.muted,\n      played: activeVideo.played,\n      loaded: activeVideo.loaded,\n      duration: activeVideo.duration,\n      playbackRate: activeVideo.playbackRate,\n      loop: activeVideo.loop,\n      onEnded: onEnded,\n      onPause: onPaused,\n      onPlay: onPlayed\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Box, {\n      padding: \"20px\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      height: \"250px\",\n      border: \"1px solid #f9982d\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loading,\n        alt: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Playbar, {\n      activeVideo: activeVideo,\n      onPrev: onPrev,\n      onNext: onNext,\n      onPause: onPause,\n      onPlay: onPlay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(VideoPlay, \"bNIPTmNnJtN9w5HRmvi/B8TiOvE=\");\n\n_c = VideoPlay;\nexport default VideoPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoPlay\");","map":{"version":3,"sources":["/home/jackymad/reacjs/efe-music/src/components/VideoPlay.js"],"names":["ReactPlayer","useState","useEffect","Playbar","Box","VideoPlay","activeVideoId","mainVideo","nextActive","urlUtube","activeVideo","setActiveVideo","url","pip","playing","controls","light","volume","muted","played","loaded","duration","playbackRate","loop","currVidIndex","findIndex","video","videoId","onEnded","length","onPaused","onPlayed","onPause","onPlay","onNext","onPrev","console","log","loading"],"mappings":"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","sourcesContent":["import ReactPlayer from \"react-player\";\nimport { useState,useEffect } from 'react'\nimport Playbar from './Playbar'\nimport loading from '../asset/images/loading.svg'\nimport Box from '@material-ui/core/Box';\n\nconst VideoPlay = ({activeVideoId, mainVideo, nextActive}) => {\n    const urlUtube = 'https://www.youtube.com/watch?v='; \n\n    const [activeVideo, setActiveVideo] = useState({\n        url: null,\n        pip: false,\n        playing: false,\n        controls: false,\n        light: false,\n        volume: 0.8,\n        muted: false,\n        played: 0,\n        loaded: 0,\n        duration: 0,\n        playbackRate: 1.0,\n        loop: false\n    });\n\n    useEffect(() => {\n        setActiveVideo({...activeVideo, url: `https://www.youtube.com/watch?v=${activeVideoId}`})\n    }, [activeVideoId])\n\n    const currVidIndex = mainVideo.findIndex(\n        (video) => urlUtube+video.videoId === activeVideo.url\n    );\n    \n    const onEnded = () => {\n        \n        if (currVidIndex < mainVideo.length) {\n          setActiveVideo({\n            ...activeVideo,\n            url: mainVideo[currVidIndex + 1]\n            ? urlUtube+mainVideo[currVidIndex + 1].videoId\n            : urlUtube+mainVideo[0].videoId\n          });\n        }\n        nextActive((mainVideo[currVidIndex + 1]) ? mainVideo[currVidIndex + 1].videoId : mainVideo[0].videoId );\n    };\n\n    const onPaused = () => {\n        setActiveVideo({...activeVideo,playing: false})\n    }\n\n    const onPlayed = () => {\n        setActiveVideo({...activeVideo,playing: true})\n    }\n\n    const onPause = () => {\n        setActiveVideo({...activeVideo,playing: false})\n    }\n\n    const onPlay = () => {\n        if(mainVideo.length > 0){\n            if(activeVideoId){\n                setActiveVideo({...activeVideo,playing: true})\n            } else {\n                setActiveVideo({...activeVideo,url: urlUtube + mainVideo[0].videoId,playing: true})\n                nextActive(mainVideo[0].videoId)\n            }\n        }\n        \n    }\n\n\n    const onNext = () => {\n        setActiveVideo({\n            ...activeVideo,\n            url: mainVideo[currVidIndex + 1]\n              ? urlUtube+mainVideo[currVidIndex + 1].videoId\n              : null\n        });\n        nextActive((mainVideo[currVidIndex + 1]) ? mainVideo[currVidIndex + 1].videoId : mainVideo[0].videoId );\n    } \n\n    const onPrev = () => {\n        if(currVidIndex > 0){\n            setActiveVideo({\n                ...activeVideo,\n                url: mainVideo[currVidIndex - 1]\n                  ? urlUtube+mainVideo[currVidIndex - 1].videoId\n                  : null\n            });   \n        }\n        nextActive((mainVideo[currVidIndex - 1]) ? mainVideo[currVidIndex - 1].videoId : mainVideo[0].videoId );\n    }\n\n    console.log(activeVideoId)\n\n    return (\n        <>\n            {\n                activeVideoId ? (\n                <ReactPlayer\n                width=\"100%\"\n                height=\"250px\"\n                url={activeVideo.url}\n                pip={activeVideo.pip}\n                playing={activeVideo.playing}\n                controls={activeVideo.controls}\n                light={activeVideo.light}\n                volume={activeVideo.volume}\n                muted={activeVideo.muted}\n                played={activeVideo.played}\n                loaded={activeVideo.loaded}\n                duration={activeVideo.duration}\n                playbackRate={activeVideo.playbackRate}\n                loop={activeVideo.loop}\n                onEnded={(onEnded)}\n                onPause={(onPaused)}\n                onPlay ={(onPlayed)}\n                /> ) : (\n                <Box padding=\"20px\" display=\"flex\" justifyContent=\"center\" height=\"250px\" border=\"1px solid #f9982d\">\n                    <img src={loading} alt=\"loading\"/>\n                </Box> )\n            } \n            <Playbar  activeVideo={activeVideo} onPrev={onPrev} onNext={onNext} onPause={onPause} onPlay={onPlay} />\n        </>\n    )\n}\n\nexport default VideoPlay\n"]},"metadata":{},"sourceType":"module"}